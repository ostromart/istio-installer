hub: docker.io/istio
tag: 1.1.4

# Traffic management feature
trafficManagement:
  enabled: true
  components:
    namespace: istio-control

    pilot:
      common:
        k8s:
#          env:
#          - name: GODEBUG
#            value: "gctrace=1"
          hpaSpec:
            maxReplicas: 5
            minReplicas: 1
            scaleTargetRef:
              apiVersion: apps/v1
              kind: Deployment
              name: istio-pilot
#            metrics:
#              - type: Resource
#                resource:
#                  name: cpu
#                  targetAverageUtilization: 80
          replicaCount: 1
#          readinessProbe:
#            httpGet:
#              path: /ready
#              port: 8080
#            initialDelaySeconds: 5
#            periodSeconds: 30
#            timeoutSeconds: 5
          resources:
            requests:
              cpu: 500m
              memory: 2048Mi

        values:
          image: pilot
          traceSampling: 1.0
          configNamespace: istio-config
          appNamespaces: []
          nodeSelector: {}
          tolerations: []
          podAntiAffinityLabelSelector: []
          podAntiAffinityTermLabelSelector: []
          keepaliveMaxServerConnectionAge: 30m
          configMap: true
          ingress:
            ingressService: istio-ingressgateway
            ingressControllerMode: "OFF"
            ingressClass: istio
          telemetry:
            enabled: true
          policy:
            enabled: false
          useMCP: true

    proxy:
      common:
        values:
          image: proxyv2
          clusterDomain: "cluster.local"
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 2000m
              memory: 128Mi
          concurrency: 2
          accessLogEncoding: TEXT
          logLevel: warning
          componentLogLevel: "misc:error"
          dnsRefreshRate: 300s
          privileged: false
          enableCoreDump: false
          statusPort: 15020
          readinessInitialDelaySeconds: 1
          readinessPeriodSeconds: 2
          readinessFailureThreshold: 30
          includeIPRanges: "*"
          autoInject: enabled
          tracer: "zipkin"

# Policy feature
policy:
  enabled: true
  components:
    namespace: istio-policy

# Telemetry feature
telemetry:
  enabled: true
  components:
    namespace: istio-telemetry

# Security feature
security:
  enabled: true
  components:
    namespace: istio-security

# Config management feature
configManagement:
  enabled: true
  components:
    namespace: istio-control

# Auto injection feature
autoInjection:
  enabled: true
  components:
    namespace: istio-control

# Global values passed through to helm global.yaml.
values:
  logging:
    level: "default:info"
  k8sIngress:
    enabled: false
    gatewayName: ingressgateway
    enableHttps: false
  proxy_init:
    image: proxy_init
  imagePullPolicy: Always
  controlPlaneSecurityEnabled: true
  disablePolicyChecks: true
  policyCheckFailOpen: false
  enableTracing: true
  mtls:
    enabled: false
  arch:
    amd64: 2
    s390x: 2
    ppc64le: 2
  oneNamespace: false
  configValidation: true
  defaultResources:
    requests:
      cpu: 10m
  defaultPodDisruptionBudget:
    enabled: true
  useMCP: true
  outboundTrafficPolicy:
    mode: ALLOW_ANY
# TODO: remove requirement to set these to nil values. This is an issue with helm charts.
  sds:
    enabled: false
    udsPath: ""
    useTrustworthyJwt: false
    useNormalJwt: false